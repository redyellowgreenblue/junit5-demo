buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
		// maven { url "https://repo.spring.io/snapshot" }
		// maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

// Special syntax for overriding spring-boot-dependencies
ext['junit-jupiter.version'] = '5.4.0'
// ext['spring.version']        = '5.1.3.RELEASE'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
	// compile instead of testCompile since we implement extensions in src/main/java
	compile("org.junit.jupiter:junit-jupiter-api")

	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.junit.jupiter:junit-jupiter-params")
	testCompile("org.junit.jupiter:junit-jupiter-migrationsupport")
	testCompile("org.junit.platform:junit-platform-runner")

	testRuntime("org.junit.jupiter:junit-jupiter-engine")
	testRuntime("org.junit.vintage:junit-vintage-engine")
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed" // "standardOut", "standardError"
	}
}

wrapper {
	gradleVersion = '5.4.1'
}
